у меня есть вот такие исходные данные, написаные в программу на языке go:
variantMatrix = [][]float64{
		{0.0, 1.0, 0.0, 0.0, 0.0},
		{0.0, 0.143, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0, 0.25},
		{0.0, 0.125, 0.0, 0.0, 0.0},
		{0.0, 0.091, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0667, 0.0},
	}

	lambda_0 = 4.0
	Vi = 0.5
	K1 = 1.0
	K2 = 2.0
	K3 = 2.0
	K4 = 1.0
	K5 = 4.0

есть задание, которое нужно реализовать, написав програму:
Рассчитать основные характеристики и построить структурную схему разомкнутой стохастической сети, представленной совокупностью систем массового обслуживания (СМО) и заданной в виде матрицы вероятностей передач 6-го порядка.
Определению подлежат следующие характеристики стационарного режима разомкнутой стохастической сети:
1) Загрузка каждой СМО (Pi);
2) Среднее число занятых каналов каждой СМО (Bj);
3) Вероятности состояния сети (Poj);
4) Средние длины очередей заявок, ожидающих обслуживания в СМО; 
5) Среднее число заявок (m...m;) вCMO S1...Sj;
6) Характеристики сети в целом.
В соответствии с заданным вариантом решения задачи произвести численное определение вероятностей P_1j...P_5j. Составить матрицу вероятности передач, дополнив некоторые клетки матрицы значениями Р_іо так, чтобы выполнялось условие E_j=1 ^n(Pij) = 1.
Для каждого варианта в таблице приведена строчка из 5-ти элементов вероятностей: Р_1k, Р_2l,
P_3m, P_4n, P_5g.
Численные значения указанных элементов определяют по формулам:
Р_1k = 1/N1, Р_2l = 1/N2, P_3m = 1/N3, P_4n = 1/N4, P_5g = 1/N5, 
где N1 - число букв фамилии = 7;
N2 - число букв имени = 4;
N3 - число букв отчества = 8;
N4 = N1 + N2; N5 = N1 + N3.
Значение вероятности Р01 принимается равным единице. Значения Р02, Р03, Р04, Р00 равны нулю. Значения длительности обслуживания заявок для всех СМО сети считаются одинаковыми иравными заданному в таблице значению Vi.
константы:
lambda_0 = 4.0
Vi = 0.5
K1 = 1.0
K2 = 2.0
K3 = 2.0
K4 = 1.0
K5 = 4.0
Формулы:
lambda_j = Sum(i=0,n)Pij * labmda_i
rho_j = k_j / K_j =  (lambda_j * V_j) / K_j
k_j = lambda_j * Vj
Для стационарности режима работы СМО необходимо, чтобы pj≤1 для всех Sj, или max_j(pho_j)=max_j((lambda_j * V_j) / K_j) <= 1, j = 1..n
1) Средняя длина очереди: L = Sum(j=1,n) l_j
2) Среднее число заявок: N = Sum(j=1,n) m_j
3) Среднее время ожидания в очередях: W = Sum(j=1,n)(a_j * w_j)
4) Среднее время пребывания заявки в сети: T = Sum(j=1,n)(a_j * T_j)

допиши программу

P_01 + (P_11 - 1) * a_1 + P_21 * a_2 + P_31 * a_3 + P_41 * a_4 + P_51 * a_5 = 0
P_02 + P_12 * a_1 + (P_22 - 1) * a_2 + P_33 * a_3 + P_42 * a_4 + P_52 * a_5 = 0
P_03 + P_13 * a_1 + P_23 * a_2 + (P_33 - 1) * a_3 + P_43 * a_4 + P_53 * a_5 = 0
P_04 + P_14 * a_1 + P_24 * a_2 + P_34 * a_3 + (P_44 - 1) * a_4 + P_54 * a_5 = 0
P_05 + P_15 * a_1 + P_25 * a_2 + P_35 * a_3 + P_45 * a_4 + (P_55 - 1) * a_5 = 0